name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
    ################################
    ##
    ## BUILD
    ##
    ################################
    Build:
      name: Build
      runs-on: ubuntu-latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      steps:
        - name: 'Checkout'
          uses: actions/checkout@v4

        - name: 'Setup Nodejs'
          uses: actions/setup-node@v3
          with:
            node-version: 22

        - name: 'Install dependencies'
          run: npm ci

        - name: 'Build'
          run: npm run build

        - name: 'Upload Build artifacts'
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: build-artifact
            if-no-files-found: error
            path: |
              dist/

    ################################
    ##
    ## CHECKS
    ##
    ################################
    Check:
      name: Check
      needs: Build
      runs-on: ubuntu-latest
      steps:
        - name: 'Checkout'
          uses: actions/checkout@v4

        - name: 'Download build artifacts'
          uses: actions/download-artifact@v4
          with:
            name: build-artifact

        - name: 'Setup Nodejs'
          uses: actions/setup-node@v3
          with:
            node-version: 22

        - name: 'Install dependencies'
          run: npm ci

        - name: 'Produce Reports & Logs'
          if: always()
          run: npm run ci:check

        - name: 'Upload Check artifacts'
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: check-artifact
            if-no-files-found: error
            path: |
              reports/

    ################################
    ##
    ## TEST
    ##
    ################################
    Test:
      name: Test
      needs: Build
      runs-on: ubuntu-latest
      # container:
      #   image: mcr.microsoft.com/playwright:v1.40.0-jammy
      steps:
        # - name: 'Initialize Git LFS'
        #   run: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash

        # - name: 'Install Git LFS'
        #   run: apt-get install -y git-lfs

        - name: 'Checkout'
          uses: actions/checkout@v4

        - name: 'Download build artifacts'
          uses: actions/download-artifact@v4
          with:
            name: build-artifact

        - name: 'Setup Nodejs'
          uses: actions/setup-node@v3
          with:
            node-version: 22

        - name: 'Install dependencies'
          run: npm ci

        - name: 'Install playwright Browsers'
          run: npx playwright install --with-deps

        - name: 'Run Playwright Tests'
          run: npm test
          # env:
          #   HOME: /root

        - name: 'Upload Test artifacts'
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: test-artifact
            if-no-files-found: error
            path: |
              .nyc_output/
              test-results/
              coverage/
              playwright-report/
              tests/__snapshots__/
